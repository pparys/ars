root ::= header ws test_block_list ws finish
header ::= "set testdir [file dirname $argv0]" ws "source $testdir/tester.tcl" ws "set testprefix" ws identifier ws "set ::timeout 60000" (ws variable_definition)*
variable_definition ::= "set" ws identifier ws (tcl_list | tcl_value)
test_block_list ::= test_block (ws test_block)*
test_block ::= do_test | do_execsql_test | procedure_definition | ifcapable_block | conditional_block | tcl_statement
do_test ::= "do_test" ws test_name wso "{" wso (tcl_statement ws)* "}" wso expected_result
do_execsql_test ::= "do_execsql_test" ws test_name wso "{" wso sql_statements wso "}" wso expected_result
procedure_definition ::= "proc" ws identifier ws parameter_list wso "{" wso (tcl_statement ws)* "}"
conditional_block ::= "if" ws condition wso "{" wso (tcl_statement ws)* "}" (wso "else" wso "{" wso (tcl_statement ws)* "}")?
ifcapable_block ::= "ifcapable" ws identifier wso "{" wso (test_block ws)+ "}"
tcl_statement ::= catchsql_command | execsql_command | db_command | lappend_command | return_command | tcl_simple_command
tcl_simple_command ::= identifier (ws tcl_value)*
catchsql_command ::= "catchsql" ws tcl_value
execsql_command ::= "execsql" wso "{" wso sql_statements wso "}"
db_command ::= ("db" | "db2") ws identifier (ws tcl_value)*
lappend_command ::= "lappend" ws identifier ws tcl_value
return_command ::= "return" ws tcl_value
parameter_list ::= identifier | "{" wso (identifier ws)+ "}"
test_name ::= identifier "-" digit+ "." digit+
sql_statements ::= sql_statement (wso ";" wso sql_statement)* (wso ";")?
sql_statement ::= begin_stmt | commit_stmt | rollback_stmt | pragma_stmt | create_table_stmt | create_index_stmt | insert_stmt | select_stmt | with_stmt
begin_stmt ::= "BEGIN" ws ("EXCLUSIVE" | "IMMEDIATE")?
commit_stmt ::= "COMMIT"
rollback_stmt ::= "ROLLBACK"
pragma_stmt ::= "PRAGMA" ws identifier ( wso "=" wso literal )?
create_table_stmt ::= "CREATE TABLE" ws identifier wso "(" wso column_def_list wso ")"
column_def_list ::= column_def ( wso "," wso column_def )*
column_def ::= identifier ( ws type_name )? ( ws column_constraint )*
column_constraint ::= "PRIMARY KEY" | "NOT NULL" | "UNIQUE" | "DEFAULT" ws literal
create_index_stmt ::= "CREATE INDEX" ws identifier ws "ON" ws identifier wso "(" wso identifier wso ")"
insert_stmt ::= "INSERT INTO" ws identifier ( wso "(" wso column_list wso ")" )? ws ( "VALUES" wso "(" wso value_list wso ")" | "SELECT" ws select_expr )
column_list ::= identifier ( wso "," wso identifier )*
value_list ::= literal ( wso "," wso literal )*
select_stmt ::= "SELECT" ws select_expr ws "FROM" ws identifier ( ws "WHERE" ws condition_expr )?
select_expr ::= "*" | "count(*)" | identifier | literal | identifier wso "(" wso "*" wso ")"
condition_expr ::= identifier wso "=" wso ( identifier | literal )
with_stmt ::= "WITH" ws identifier wso "(" wso identifier wso ")" wso "AS" wso "(" wso sql_statement ( ws "UNION ALL" ws sql_statement )* wso ")" wso sql_statement
condition ::= tcl_value wso ( "==" | "!=" | ">" | "<" | ">=" | "<=" ) wso tcl_value | identifier
tcl_value ::= literal | identifier | "$" wso identifier | "$::" wso identifier | tcl_list | "{" wso sql_statements wso "}"
tcl_list ::= "{" wso (tcl_value ws)* "}"
expected_result ::= literal | tcl_list
literal ::= numeric_literal | string_literal
numeric_literal ::= digit+ ( "." digit+ )?
string_literal ::= "\"" [^"]* "\"" | "'" [^']* "'"
identifier ::= letter ( letter | digit | "_" )*
letter ::= [A-Za-z]
digit ::= [0-9]
finish ::= "finish_test" wso
ws ::= [ \t\n\r]+
wso ::= [ \t\n\r]*
